package application;

import settings.Identidades;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;

public class Programa {
    public static void main(String[] args) {
        Locale.setDefault(Locale.US);
        Scanner scanner = new Scanner(System.in);

        System.out.print("How many employees will be registered? ");
        int n = scanner.nextInt();
        List<Identidades> list = new ArrayList<>();

        for (int i=0; i<n; i++){
            System.out.println("Employee #" + (i+1));
            System.out.print("ID: ");
            int id = scanner.nextInt();
            while (hasId(list,id)){
                System.out.println("ID alredy exist! Please try again:");
                id = scanner.nextInt();
            }
            System.out.print("Name: ");
            scanner.nextLine();
            String name = scanner.nextLine();
            System.out.print("Salary:");
            double salary = scanner.nextDouble();

            Identidades identidades = new Identidades(id, name, salary);
            list.add(identidades);
        }
        System.out.print("Enter with the employee ID that will increase the salary:");
        int idemployee = scanner.nextInt();

        Identidades identidades = list.stream()
                .filter(x -> x.getId() == idemployee)
                .findFirst()
                .orElse(null);

        //Integer position = positionId(list, idemployee);

        if (identidades == null){
            System.out.println("This id does not exist!");
        }
        else {
            System.out.print("Enter with the percentage:");
            double percentage = scanner.nextDouble();
            identidades.setPercentage(percentage);
        }

        System.out.println("Employees list:");
        for (Identidades employeeslist: list) {
            System.out.println(employeeslist);
        }


        scanner.close();
    }
    static Integer positionId(List<Identidades> list, int id){
        for (int i=0; i< list.size(); i++){
            if(list.get(i).getId()==id){
                return i;
            }
        }
        return null;
    }
    public static boolean hasId(List<Identidades> list, int id) {
        Identidades emp = list.stream()
                .filter(x -> x.getId() == id)
                .findFirst()
                .orElse(null);
                return emp != null;
    }
}
